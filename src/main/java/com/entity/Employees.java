package com.entity;
// Generated 2017-3-27 12:11:26 by Hibernate Tools 3.5.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "oasys")
public class Employees implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer employeeId;
	@JsonIgnoreProperties({ "employeeses", "dept" })
	private Job job;
	@JsonIgnoreProperties({ "employeeses", "jobs" })
	private Dept dept;
	private String employeeName;
	private String sex;
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	private Date birthday;
	private String address;
	private String nocode;
	private String learn;
	private String mobile;
	private String email;
	private String workState;
	private String photo;
	private String agreement;
	private String pwd;
	private Integer userLevel;
	private String onLine;
	private Set<Activeinfo> activeinfos = new HashSet<Activeinfo>(0);
	private Set<File> filesForFileFrom = new HashSet<File>(0);
	private Set<File> filesForFileTo = new HashSet<File>(0);
	private Set<Notice> notices = new HashSet<Notice>(0);
	private Set<Task> tasks = new HashSet<Task>(0);

	public Employees() {
	}

	public Employees(String sex) {
		this.sex = sex;
	}

	public Employees(Job job, Dept dept, String employeeName, String sex, Date birthday, String address, String nocode,
			String learn, String mobile, String email, String workState, String photo, String agreement, String pwd,
			Integer userLevel, String onLine, Set<Activeinfo> activeinfos, Set<File> filesForFileFrom,
			Set<File> filesForFileTo, Set<Notice> notices, Set<Task> tasks) {
		this.job = job;
		this.dept = dept;
		this.employeeName = employeeName;
		this.sex = sex;
		this.birthday = birthday;
		this.address = address;
		this.nocode = nocode;
		this.learn = learn;
		this.mobile = mobile;
		this.email = email;
		this.workState = workState;
		this.photo = photo;
		this.agreement = agreement;
		this.pwd = pwd;
		this.userLevel = userLevel;
		this.onLine = onLine;
		this.activeinfos = activeinfos;
		this.filesForFileFrom = filesForFileFrom;
		this.filesForFileTo = filesForFileTo;
		this.notices = notices;
		this.tasks = tasks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "employeeID", unique = true, nullable = false)
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "jobID")
	public Job getJob() {
		return this.job;
	}

	public void setJob(Job job) {
		this.job = job;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "deptID")
	public Dept getDept() {
		return this.dept;
	}

	public void setDept(Dept dept) {
		this.dept = dept;
	}

	@Column(name = "employeeName", length = 50)
	public String getEmployeeName() {
		return this.employeeName;
	}

	public void setEmployeeName(String employeeName) {
		this.employeeName = employeeName;
	}

	@Column(name = "sex", nullable = false, length = 10)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", length = 19)
	@JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "address", length = 50)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "NOcode", length = 50)
	public String getNocode() {
		return this.nocode;
	}

	public void setNocode(String nocode) {
		this.nocode = nocode;
	}

	@Column(name = "learn", length = 50)
	public String getLearn() {
		return this.learn;
	}

	public void setLearn(String learn) {
		this.learn = learn;
	}

	@Column(name = "mobile", length = 50)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "workState", length = 50)
	public String getWorkState() {
		return this.workState;
	}

	public void setWorkState(String workState) {
		this.workState = workState;
	}

	@Column(name = "photo", length = 50)
	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	@Column(name = "agreement", length = 50)
	public String getAgreement() {
		return this.agreement;
	}

	public void setAgreement(String agreement) {
		this.agreement = agreement;
	}

	@Column(name = "pwd", length = 10)
	public String getPwd() {
		return this.pwd;
	}

	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	@Column(name = "userLevel")
	public Integer getUserLevel() {
		return this.userLevel;
	}

	public void setUserLevel(Integer userLevel) {
		this.userLevel = userLevel;
	}

	@Column(name = "onLine", length = 10)
	public String getOnLine() {
		return this.onLine;
	}

	public void setOnLine(String onLine) {
		this.onLine = onLine;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employees")
	@JsonIgnore
	public Set<Activeinfo> getActiveinfos() {
		return this.activeinfos;
	}

	public void setActiveinfos(Set<Activeinfo> activeinfos) {
		this.activeinfos = activeinfos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employeesByFileFrom")
	@JsonIgnore
	public Set<File> getFilesForFileFrom() {
		return this.filesForFileFrom;
	}

	public void setFilesForFileFrom(Set<File> filesForFileFrom) {
		this.filesForFileFrom = filesForFileFrom;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employeesByFileTo")
	@JsonIgnore
	public Set<File> getFilesForFileTo() {
		return this.filesForFileTo;
	}

	public void setFilesForFileTo(Set<File> filesForFileTo) {
		this.filesForFileTo = filesForFileTo;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employees")
	@JsonIgnore
	public Set<Notice> getNotices() {
		return this.notices;
	}

	public void setNotices(Set<Notice> notices) {
		this.notices = notices;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employees")
	@JsonIgnore
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

}
